<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QCzHzj3B1P8D3URMxi3bQkcAAAAASUVORK5CYII=
</value>
  </data>
</root>